<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>