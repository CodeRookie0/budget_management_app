<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>