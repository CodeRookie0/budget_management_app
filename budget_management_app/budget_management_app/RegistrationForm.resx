<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAA7AAAAOwASfED60AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAZDElEQVR4Xu1dB1Bc13p2yrxJMsm85CUvL8lk8pLMZPIyqrB92c7Sy9KXKkBICBCoIEQTCHXLVkEF
        rGYVy0iyrG5ZBQn1YstVcrdsybJlWxUJAaLDn/PfPQu7y1lYIbS7wP1mvmHvvWfvcu/33XP+/9xzz32J
        Bw8ePHjwcHOMHz/+P+lHDrbLPIY5BALBNcIM/CwUCvPJ5wvcBh4jA2PHjv1nIvrnRPx95O+nYrH4H+km
        HiMFRPi5hM2enp75dBWPkQIifB7hJzKZ7E/k71fEBOl0E4+RACL6aiL+7/CzSCT6F7K8jNvAgwcPHjx4
        8OAxzBAdHf0XJNb5E6bAdBWPkYLx48f/Pcl0PiAGuEL4E3Z+0U08RgKI6AuI6Ivxs5eX19+R5R8kEsm/
        cxt5DH8QwV8njKaLL5Ha4CRJf0V0kcdwBxHcjxgAO7yCyV/sBPti1KhRv6GbeYwEENGDiAF2kaagHDu/
        6GoePHjwGA7w8PD4PYlsC1Uq1SqevVhOmoB4cpr+3HS2hhkwzyUHeXft2rVt+/btA57W3Lt3L2RkZNTr
        dLod9JQNL5DAJqmsrKwBeNhFe3s7kIukUSaT/TU9bcMHxAAz161b106PlYcdBAQE1JGm8t/oaRs+4A3g
        GIaNAchBeAtUis88veQPkAKJpJEYoIseJw87GBYGINHsfwgU8ifjNi6BsYfWc/QozobX1q+nh8nDHoaF
        AUh1Hzd+clL92BPbwEyPshm8ARzAcDHARI+pqU+f1wCXLl6C1atWD1mSlBfu3btHj8Yx8AawwLTsGTAh
        PAemJc4fkgzxi4Kamhp6NI6BN4AF0AAlk9fCa4VHhySTo7N4A/AG4A3AG+AZwBvAArwBhigG0wAZsUVQ
        kr52SDIqJIE3wPMY4MD+AzBjWu6Q5ayZs+HWrVv0aBwDb4ARDt4AIxy8AUY4eAOMcPAGGOHgDTDCwRtg
        hGPEGaC1tRWqq6vpkuvQ1dwEXU1PnUbo7KC/bI0RZ4Cff/4Z4uPj6ZLr8CgjFmpTw5zG1o/fo79sDd4A
        LgJvgEGEuxgAm5dz587BihUrIDAwEMrKyuiW3mi5eApazlY7jZ0P2COFeAP0gQcPHnAPTziKa9euQVFR
        Eawnv6vT6cBoNNIt7gu3MIBAIPgtEdFA/hEZXfVMGGwD4Lg6Q0wsqAJCQanzgVOnz9AtjiEzMxMOHz4M
        ISEh8Msvv9C17gmXG4Ab0i0Q3CSsInyfiLmBbnIYg22AGflF4FG4Dka9/SOM3ngFVHo/aG5uplv7xtGj
        RyE9PR26urqgsrIS3n//fbrFBi2kSm6+4zx2ttAftobLDeDp6bmScAZ+prNWfTV+/Pj/4TY6iME2QHBU
        LBH+A84ASKXBCD/++CPdah9Pnjzh2v4ffviBrrGPrksG6Drv6zTCw4v0l63hDgZYTwRMooso5mXyD42j
        iw5hsA2wdMUqEE6cDaPf+BzGLXwLRF4q+O677+hW+1i0aBFs2LCBLvUN3gAU5MeF5Kr/kXAW4SZiiLNk
        9TM9sz7YBsDq3jsgGDR+gZCSMZV7nDooKAhu3LhBS/TG559/DhEREVwm4BAeXiZR5nnnsfUh/WFruEUQ
        SAQcTYQvIwbI1Gg0f0VXO4zBNsDJkye5QM4Sly5d4kzw/fff0zU96OjogLi4OLhy5QpdM3TgFgZ4Xgym
        ATo7O4HEIvDZZ5/RNT2wZ4KtW7dCaWkpXRpa4A1gg4MHD8Ls2bPpUm+gCTDQK86bBQY/X8hISQZfX1+o
        ra2lJRzD/cbrcLfxG6expZ09V8ZADIBTy+LkknTxJYlE8gfLZadjsAzQ1tYGYWFhfbb1iFk52VDiq4Yb
        SSGwJ9wXAr11XNr3LFh7xRdWXlY6jd/VnqO/bI2BGIA01fGE+HKN34lEov8mn2+Qv3K62fkYLAPs2LGj
        z+5bMyIDA+B6Ykh3P3uMrx5+/fVXutUxDGUDIIjouSRu+5Kce+zDwcmmXIfnMQB29654dQkU5uWAN7mS
        Hem5y5uaBVVhpNon4l+LDwZ/nZarPZ4FPz+5Cj/Vfew0NrXX0V+2xkANQL7zRyL8Q8JbhP9EV7sGAzVA
        S0sLRBgC4I35aji7TgsGfxmcPdt/ty9e7bHhYRDmreXEv3jhAt0y9DAQA9Bq/yY571Hkr/ldS9zrdlyC
        gRrgo48+gplpPt2dJRc3aCA/N4vb5giw9sAUcChjIAYgVX8IOecGuojnfwoxhYguOh8DNQD27sWGaaHj
        nMkAu1/WwMuL+48BBgM/33gIt68/cBqbGtkdVANtAtwKAzUA4uVFcyEuXAuFU3zAEOwLd+7coVteLDbN
        rWY+4PmiePOLu/SXrTHiDYD45ptvuPz+6dOndM2LB2+AQcTzGsAVeHinHh78+sRpbG1mD2zhDTDCMSIN
        EBsby927dwafZUiZKzDiDFBXV8fdtg0NDXUKN27cSH/ZGo8fP4ZHjx45jfY6qkacAdwFn3zyCdcP4Syi
        4VjgDeAi8AYYRAxFA+DIIWcSxzmw4FIDeHp6/h8RL18ikax6Tp4QhgS0C2ZMBjOFxjBISU2FlStXOsR1
        69ZxfQEjDS4zgFgsDpfJ5fXRiUltCZPSwdWMnzgJgg0GKJ5TQk/NyIDrDCCV3s8uKoGCJa+4DxcvBV9/
        f24sP97oGU7EZoAFlxhAIBD8jUQibWSK4GJGxiVARUUFM5AaynSrIBDHj0llsgbLEz9p+kxIycp2CWfN
        X9j9f0TFJ8CaNWuYJ3Eo060NkE+qXqFYAsLU2U6nyCeYM4H5f4lJTIIDBw5w9/mHE+2NWXQbA4jkyu5H
        sZxJQWo+JGdOtTLAoUOH6OkZ/uANMEwN0NTUBO+99x6sqVwHU6bPgsDIGFDr/UDqpQSZWAw6pRLCA/zB
        x0veoRQLt5N0PIoY4fdUohcLdzZAdEIibN++nRsYMtSIA1qx+UrLygG5xhuUiZkwLr8Cxi47DKM3fwKj
        dn4H4yaXQrG/Fu6lGLhh7ReMgbA9VA+53oonGrGoUSsWfS4RidJRIyrX4MOdDTAUg8APPvgAystXgdY/
        CORx6TB28dswatcN5vGaDWAe0m7L88YAyNcrnypFwjqlSLCEZGy/pbINHoaCAT7++OMhwd27d4NvSBjI
        knJg9GsXmcdoyf4MYOaNpFBY7KdpUYlFtVKBIJnI9mcm9QYBfAzw/MDIvnxtBSgCQmHM8qPMY2PRUQOY
        +VlCMCQo5Q0aiegkvpCbSvh84A3wfGhoaICkSekgn5gHo6u+ZR6XPT6rAZAPSLywJsi7ldQGd0iw+L9U
        xoGDN8DAgS+ECAqPAFHucubx9MeBGMDMY5F+XWqxqO65nwFwZwNgFrBt2za4ffu22/Hbb7+F8FB/UMiF
        MKZ4E/N4mCTR/5jVNTCmbDt4hqdAsrcGdhp84ExMANyaEMoU2x4xSFSRAJF4YBSV89kxFIJAVrTtSmKk
        nxgXCeuK1XB1uxZUXiIYW7ieeUwcieiec7eCLi4NvNQaSJg4CQqL55BsoZybvKps7lzInpwGvloNGP18
        oMLgB9+TtJAlui2ro/yBZAn3JRLJH6ikzwZbA+BdOOwKFoclOJ0ilc6qKxgNgDeDrl696lYsKy2Coima
        7sfY7Jpg9w8gLNsGar8gKCqZC+fPn7d7JxCBA0VwfsPVK1ZwzzmWR4XAz8kGpvCW3Byi79CIxR/hxF5U
        VsfRywCE2YVzIHN2oUs4e+GS7v/DHWMAHD4WFqiGhhM9zzGyTDB600egMBhh6sw8h2Y1swWOYl61ciUE
        klrhtDGQKbwlM7WKRoVIVEhldRwsA7gL3c0AmO4Zo0Lhwy1aK/FtTTAucz43qdW7R47Qb1oDDYHT2OKE
        V7t27YJTp07BV199xRwqdv36dTAEBsLmyL5NgE2GSixs8PDw+COV1jHwBnAce/e8DQXpOqb4Zu5ZqgKt
        Vgtffvkl/ZYJ+Kjb5k3rITo8EGIMWijLJm19oRbWl2hg0XQfmBSnhwBfDbyyZD7cvWv96BhOeZMcFwcb
        I/o2wcZg7w6dRLyHSusYWDFAhDEWDJFRTMYmp1qJNL2kDEIZ5cxMy55mVX7yjFxmOTOx+TGXjY5PhC1b
        tnDplqt58+ZNCA3yge/ftm+AXw56QzBJ67744gsqnQnHjr4LQWT9ijwd/LTfm/ld5KNjPlC1UA2Bvip4
        raKcq3HMwCYhPCQYjsTYN8HdFANoJeJ6sVj8X1Te/mFrAMwCyDI3yaItV61aBTpvfbdASBQ0PCKCWb6g
        oAAiY+OsyhuTJsD06dOZ5XF6N3fNAvChkpwJ7KofiY+1J0Soofr4cSqZKahbXb4MEiM1cPuAvrts+xk9
        NB/XQtMxNTw9qoYm8rntVI8xML4oydDC1IxUqK+vp3sDzoQBJCb4xmJKHFtWBOnaVSJRBZW3f7AM4KVQ
        ME/C6dOnmQbAEb+s8ji6l2UAnMKdVX5qdk4vA+A+8IpyNTMmTYAzr/VE/rbcv8wbCvKmUalMWF3+KsxM
        JULXmALGtho9PDmkhNq9ciYfH/CClhM9NczGUi1Mnphg9STRjqo3oTgsiCk+EmMBpVhU63BG4M4GcJcY
        ANtvH50SWk5bR/5mNp/yhRB/NXeFmoHVPl75ZvGfHtNC7T4vpvC2bHhXBZ3nTN9bPF1nNVEGN3taUCBc
        ibVvggSl/LFIJFJTifsGb4D+gc8ozJrEFh+5/1U1lM2ZRUubBoAE+fe095z4LKEvF0Dzt1XMbfXvqLjv
        thLTRYZo4Ouvv6Z7N82fWBgawBQfWRns3UlSwpepxH2DN0D/qKxYDW+S4MxSdEumx+vggsXkVFte3wDL
        ScCH27Btt73yHx3UQ+uP1dDV1gBd7U+h/eE1qDtutCqDxNgA91FToYWczIl076aAUO0lhzsk6GMZ4LIx
        EHQS4TUqcd/gDdA/8mZkwPuvswNArOK1arlVDx+merf2mYK+J+8oegnbcvMgNF/fBQ0fzIeWG/uh4f1S
        6Kj7nmyzMco+OXSe9SHNgS8E+amsZkCdkpIMp6L9mQb4JdkAcpGwnkrcN2wNgGkgSSMgxmjsxcioaNB6
        k2DHXJZw8oxZoFKpmOUDg4IgwsYAMROSwd/fn1ke82fbUcHuYIAYkn9jimcrPhI7f9JTe15HgzeKokNN
        Zukg0b6loGZ2Nt3jaoGGK/M4A+C69tov4fHRyF5lm2lQiLHAoUMH6a8AvL5pE6wL9WEaAEnSwYYxY8b8
        A5XZPnoZgLCvruDpJXO7yyGxxsjKZ5dF5pYtsCqP4/5Z5cy07Ao23w3EiSRwjJ29hypfNHy8VXYDwHdX
        qqGkqKf9xx6+0izT1d9c3dP2P95Prm5yReNnFPvJmSlWBnh0mOT3tAYwlTV9xoAQ97XvFRWUr1hKfwXg
        xIkTUGqw3ycQKpc8duhlHywDuAsN0TFcbYEzhkdGRnITQeP08c6GWim3Et2SOxepuFzfjL1798KaAlMN
        gHk+ith4xBQ/tNaQeIAsPzk3FTqf3oXW26eg7ddL8OiQL7ce+fSYKdXEK58rS9JGXL6wQQvF+T1pJk6H
        H+PnA0v8NUzqpeJmUpP3/94nlgGwGmY9tInEp4Ysy85asAgSJ09hlkVOLSi2Kp9TXMosh8T9WNYYth1B
        6Ho0gTNnEEOolTJOBBarFiqhYs1KWhLgrbfegsoik4jYyWMpascZUmVToR8fiyIGqIHOhttck1B/YQa3
        HmsNLNuKwSNnAAW3jDHI7Jk970348MMPwWAwdGVlZbWxSJrldk9PTz8qs32wgkCJRAIFhYW9mJubS4JA
        2xggF/z8/JjlMTi0DQJjSBCYkJjILI9v9rK9HWzbE5iUlMRNJedMeGsV0HaGbYADy9Qwr7SAlgSoqamB
        +TmmJqCpWtMteMNhNdfRY17m1tEmoO5EAmeC2n1KeESq/8Z3Sdn9puCx4bCpCXhnhRqWLV1IfwXgzJkz
        XI+q5bmxZHBw8CN85J/KbB8sA7hTT6CtAZKTk3vdaHnRCA/1hYdH2DEAXpnZGcm0JHB39VKNpoCRSwEt
        BDez/cFVqN2vsg4CH33TZyq4tlALO6qq6K8A97zEvHnzrM6NJXU63ROBQPCvVGb74A3QP3IyU0i0z74J
        VHtUD356dXeAin8DfLXw4IipFrC96pFtdy5xKWB3DVAdR2qA+5wpbMt2nDXtJypUw92UMgNrY7w/YXlu
        zMQRS1KptInI2//wcd4A/WP5K4u53j5L4S1pNKi5kTxm4C3dNxea2n3s27cVFdv/jvpb0PH4WxID/GSK
        AS7m9ipnDh6/2KEDY1QI3btpShtMvXGEkeW5MRNflEm236AS9w3eAP0DX3Fflm26ElncVEoygZWv0NKm
        t50G+KhIlW76DqZytuLW7ldD01dboPXXi/DoHf9e2+sOKrgOIPx+ZqIOTp2qoXsHTng8D5bnxZLl5eVd
        CoViM5W4b/AG6B8PHz7keuLMgtjy3mE9+PuouS5aMzAzKMnUcd/BGzv1JJizFfnRAS3N/63Xo/iYMeC+
        9yw13RG0fKQ8JSWFGydheV4smZqaWicUCiOpxH2DZQCJVAqLFy/uRXwbF8sAQUHBzPL4ujdbA2AWkJaW
        xiwfHh7ulgZATJwQYzcOQFYW66B8+RJa2jR8LDM9BTaU0lvIxAQY0GH3rq3glsRq32y0y5u0EBKo56aV
        MQMvwkSSRVmeE0tevnwZiKaNo0aN+lsqcd+wNQASc3JjciqTlmkaEnv2jCnsssiMvHyr8lMLipjlkLEp
        E2HG3PndZd3JAHv37OG6Yy1Ft2T9CR8I0MtJitpz1w5rhInJcbBomo67q4flUFzs5MFmAe8TYJ6PqR6m
        jOaAD4lXPoqPYwLNwMEhOOPpHvK/WJ4TS1ZWVnYplcrDVN7+wTKAu9CdDICdT1jNY9RvFsmWH201iXb/
        /n36LVPAtmh+CUQEq7m7evaaETMx4MsgbX5aSrzVlY/ZRXZ2NvdKXMvzYUucZIKkfwoqb/9gGWB6aRlM
        mzOXyZk2ffvYZOD9AVZZ5KwFi63K5y1cwixnJu7PXNadDICoXLuK5OP2awFkZaECwsIM3DzIlsD/OYs0
        CQE+Sq4mwazi/HoNvPe6Fg6vUMOaAg1Ek1QvOiIITp48YdXmo/hFRUXcsWMPoOX5sOTmzZsx+v+USusY
        ehmACIB3A0NIVWPLoOBg0Ol9ugVCps/MI22Ogller9dDZFy8VXnjhGQSR3gzyyuUSkidmtNd1t0M0NjY
        CMEBOri1j31n8MbbOlCoRBA+UQZBoWSZ8c5DDChx4ojlry7m3o42M2cylzZuf+MNqxFFZmAzkp45EUJi
        ldi2d+3cudPqfJiJ0+l5e3vXe3h49N//bwlbA7hTFoA3g2zLutIAiHcOHSRpmZa019Y9g2bxM1724t4N
        OGujHLQ+XvDGm5uf+TV2Zpw5cxoCiZEmz1PAiktKyC6XgULh1YXzEFieEyQJ0FtJ6rebyuo43NoAMTHg
        4+MDFy9e7C7jagNg1Zw7PQO2ze8ZIGIrvpkLjyggbqoK/IP1sHf/bqs00R4wZsA8PyHZCGHxWijeab1P
        NAHWBJYmwIdLyLp7Dt3/t4U7GyCUNB+SkAAwkDbVbAJXGwCBQuJLrfAWrT3xLVm6xwtisrxArpDChDQj
        VKxfyXUu4S1d5NmzZ2Hb9q2QkzuFNIMyCJ+ghtwNcua+kJY1wfHjx7HdbyCBn4RK+mxwdwOMf7kAZEkx
        3SZwBwMgsL0O9NOAlxLFty+WJZedU0L+VjlMWiCD2Bw5xExRQ/QkNcRmkdinVAoz18lhaQ37u7acusJU
        E5B2v4nEbAN/XexQMABOOS+LjcD73xBDmgV3MAACB6eotHLI32L/6n9RXHCY1Chq4VOxVLyOSjkwsAwg
        k8mgqqqqF/HuE8sAUVFRzPIlJSVMA+Ar4VnlE5OS7BrAbAJS1XGPjOODle5ANLnGWwFZrzrPBEVVRHyV
        sF4oFMZRGQcOWwNgGhgaEQmBIaFM4ji97rKE0+aUQhC5MlllkakWgiLTcqYzyyGDSCqYlV/UXdbWAEjB
        lAkgmTEJJHkZbkNxzkSQ+akgJFkGS04omKINBpdfUEJKsaxFqhDeGXCbb4teBnAjsgzgtqzeCp5FmSDV
        kTZ+iRyWn2eLOFBiWqnSCxtkKtHuQZshDDFq1KjfSCSSpywBXM0goxHGLS9mn3B35e61IEqLBqm3DNIW
        eMGS6oHXCBg05qyWgSZAVC9XCD995k4eRyGVy6+mZmV3sURwFfGmkFSrhnF7Ktgn2s05btdqEE5LBgkJ
        En3iFTBpkRzmvOUFy87bNwR29sw7qOAifEOquE4sEzTKlILDpK33olINHnBWarLjY56enicJL0mk0maV
        Rtum9w9oHQR2evsHgHdA4ICo9fUDsVQKQh9dh2eof9uQp6+uXahTdMq00i6xXIgBHGj8RR36MFEbUhso
        alNohe1iqaBTphA2SWSCX0gbf43ocprqMxAeRY2p3L2h0Wj+Ep8gJdQjSTPgS/LJScQU+YNBcgA4t+1G
        su9Nz0ryvUrCEtZ+hzrJOc4l5zqJHGcKOcZMwiyyPo0sGwk5LQaJ6gFNGsWDBw8ePIYfXnrp/wH9A3fm
        qQBMLwAAAABJRU5ErkJggg==
</value>
  </data>
</root>