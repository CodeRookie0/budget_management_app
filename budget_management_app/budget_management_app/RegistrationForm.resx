<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>